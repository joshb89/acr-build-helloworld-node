on: [push]
name: Linux_Container_Workflow

env:
    container_version: 22.5.0
    #testting workflow
jobs:
    build-and-deploy:
        runs-on: ubuntu-latest
        steps:
        # checkout the repo
        - name: 'Checkout GitHub Action'
          uses: actions/checkout@v4
          
        - name: 'Login via Azure CLI'
          uses: azure/login@v1
          with:
            creds: ${{ secrets.AZURE_CREDENTIALS }}
        
        - name: Log in to Oracle Container Registry
          #run: echo "${{ secrets.ORACLE_PASSWORD }}" | docker login container-registry.oracle.com -u "${{ secrets.ORACLE_USERNAME }}" --password-stdin
          uses: docker/login-action@v3
          with:
              registry: container-registry.oracle.com
              username: ${{ secrets.ORACLE_USERNAME }}
              password: ${{ secrets.ORACLE_PASSWORD }}

        
        - name: Pull base image manually
          run: docker pull container-registry.oracle.com/fdi/remoteagent:$container_version

            
        - name: 'Build and push image'
          uses: azure/docker-login@v1
          with:
            login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
            username: ${{ secrets.REGISTRY_USERNAME }}
            password: ${{ secrets.REGISTRY_PASSWORD }}

        - run: |
            docker build . \
              --build-arg BASE_IMAGE=container-registry.oracle.com/fdi/remoteagent:$container_version \
              -t ${{ secrets.REGISTRY_LOGIN_SERVER }}/sampleapp:${{ github.sha }}            
        - name: 'Push Docker image to ACR'
          run: |
            docker push ${{ secrets.REGISTRY_LOGIN_SERVER }}/sampleapp:${{ github.sha }}
            
        # - name: 'Deploy to Azure Container Instances'
        #   uses: 'azure/aci-deploy@v1'
        #   with:
        #     resource-group: ${{ secrets.RESOURCE_GROUP }}
        #     dns-name-label: ${{ secrets.RESOURCE_GROUP }}${{ github.run_number }}
        #     image: ${{ secrets.REGISTRY_LOGIN_SERVER }}/sampleapp:${{ github.sha }}
        #     registry-login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
        #     registry-username: ${{ secrets.REGISTRY_USERNAME }}
        #     registry-password: ${{ secrets.REGISTRY_PASSWORD }}
        #     name: aci-sampleapp
        #     location: 'central us'
        #     ports: 9091
        #     cpu: 4
        #     memory: 8
        #     azure-file-volume-share-name: ${{ secrets.FILE_SHARE_NAME }} 
        #     azure-file-volume-account-name: ${{ secrets.STORAGE_ACCOUNT_NAME }} 
        #     azure-file-volume-account-key: ${{ secrets.STORAGE_ACCOUNT_KEY }} 
        #     azure-file-volume-mount-path: /faw/logs/RemoteAgent/

        - name: 'Deploy ACI with multiple volumes'
          uses: azure/arm-deploy@v1
          with:
            scope: resourcegroup
            resourceGroupName: ${{ secrets.RESOURCE_GROUP }}
            template: ./aci-multi-volume.json
            parameters: >
              containerName=aci-sampleapp
              imageName=${{ secrets.REGISTRY_LOGIN_SERVER }}/sampleapp:${{ github.sha }}
              location=centralus
              # storageAccountName1=${{ secrets.STORAGE_ACCOUNT_NAME }}
              # storageAccountKey1=${{ secrets.STORAGE_ACCOUNT_KEY }}
              # fileShareName1=${{ secrets.FILE_SHARE_NAME }}
              # fileShareName2=${{ secrets.FILE_SHARE_NAME2 }}
